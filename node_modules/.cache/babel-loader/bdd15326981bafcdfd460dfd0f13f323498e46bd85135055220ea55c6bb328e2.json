{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input\"\n};\nconst _hoisted_2 = {\n  class: \"input\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"input\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = [\"disabled\"];\nconst _hoisted_6 = {\n  key: 2,\n  class: \"message error\"\n};\nconst _hoisted_7 = {\n  key: 3,\n  class: \"message success\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.handleSubmit, [\"prevent\"])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", null, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event),\n    type: \"email\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]])]), _createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", null, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    type: \"password\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]])]), !$props.isLogin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", null, \"Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.name = $event),\n    type: \"text\",\n    required: \"\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.name]])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $setup.loading,\n    class: \"auth-button register-btn\"\n  }, _toDisplayString($props.isLogin ? 'Login' : 'Register'), 9 /* TEXT, PROPS */, _hoisted_4), $props.isLogin ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    type: \"button\",\n    onClick: $setup.handleResetPassword,\n    disabled: $setup.loading,\n    class: \"auth-button reset-btn\"\n  }, \" Forgot password? \", 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true), $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString($setup.success), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: $setup.handleGoogleLogin,\n    disabled: $setup.loading,\n    class: \"auth-button google-btn\"\n  }, \" Sign in with Google \", 8 /* PROPS */, _hoisted_8), _createElementVNode(\"button\", {\n    onClick: $setup.handleAnonymousLogin,\n    disabled: $setup.loading,\n    class: \"auth-button guest-btn\"\n  }, \" Continue as Guest \", 8 /* PROPS */, _hoisted_9)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createElementVNode","onSubmit","_withModifiers","$setup","handleSubmit","_hoisted_1","_cache","$event","email","type","required","_hoisted_2","password","$props","isLogin","_hoisted_3","name","_createCommentVNode","disabled","loading","_hoisted_4","onClick","handleResetPassword","_hoisted_5","error","_hoisted_6","_toDisplayString","success","_hoisted_7","handleGoogleLogin","_hoisted_8","handleAnonymousLogin","_hoisted_9"],"sources":["C:\\Users\\khadi\\ChatApp-Project\\src\\components\\AuthForm.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <div class=\"input\">\r\n          <label>Email</label>\r\n          <input v-model=\"email\" type=\"email\" required class=\"input-field\" />\r\n        </div>\r\n  \r\n        <div class=\"input\">\r\n          <label>Password</label>\r\n          <input v-model=\"password\" type=\"password\" required class=\"input-field\" />\r\n        </div>\r\n  \r\n        <div v-if=\"!isLogin\" class=\"input\">\r\n          <label>Name</label>\r\n          <input v-model=\"name\" type=\"text\" required class=\"input-field\" />\r\n        </div>\r\n  \r\n        <button type=\"submit\" :disabled=\"loading\" class=\"auth-button register-btn\">\r\n          {{ isLogin ? 'Login' : 'Register' }}\r\n        </button>\r\n  \r\n        <button\r\n          v-if=\"isLogin\"\r\n          type=\"button\"\r\n          @click=\"handleResetPassword\"\r\n          :disabled=\"loading\"\r\n          class=\"auth-button reset-btn\"\r\n        >\r\n          Forgot password?\r\n        </button>\r\n  \r\n        <p v-if=\"error\" class=\"message error\">{{ error }}</p>\r\n        <p v-if=\"success\" class=\"message success\">{{ success }}</p>\r\n      </form>\r\n  \r\n      <button @click=\"handleGoogleLogin\" :disabled=\"loading\" class=\"auth-button google-btn\">\r\n        Sign in with Google\r\n      </button>\r\n      <button @click=\"handleAnonymousLogin\" :disabled=\"loading\" class=\"auth-button guest-btn\">\r\n        Continue as Guest\r\n      </button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n\r\nimport { ref } from 'vue'\r\nimport { useAuth } from '@/composables/useAuth'\r\nimport { useRouter } from 'vue-router' // Make sure this import exists\r\nimport { getAuth, sendEmailVerification, defineProps } from 'firebase/auth'\r\n\r\nconst props = defineProps({\r\n  isLogin: { type: Boolean, required: true }\r\n})\r\n\r\nconst emit = defineEmits(['auth-success'])\r\n\r\n// Initialize router properly\r\nconst router = useRouter() // This line is crucial\r\n\r\nconst email = ref('')\r\nconst password = ref('')\r\nconst name = ref('')\r\nconst error = ref('')\r\nconst success = ref('')\r\nconst loading = ref(false)\r\n\r\nconst { login, register, resetPassword, googleLogin, anonymousLogin } = useAuth()\r\n  \r\n  \r\n  const handleSubmit = async () => {\r\n    error.value = ''\r\n    success.value = ''\r\n    loading.value = true\r\n    try {\r\n      if (props.isLogin) {\r\n        await login(email.value, password.value)\r\n        const currentUser = getAuth().currentUser\r\n  \r\n        if (!currentUser?.emailVerified) {\r\n          await sendEmailVerification(currentUser)\r\n          throw new Error('Email not verified. A new verification email has been sent.')\r\n        }\r\n  \r\n        emit('auth-success')\r\n      } else {\r\n        await register(email.value, password.value, name.value)\r\n        success.value =\r\n          'Registration successful. A verification email has been sent. Please verify your email before logging in.'\r\n  \r\n        setTimeout(() => {\r\n          router.push('/login') // Redirect to login after showing the message\r\n          loading.value = false\r\n        }, 3000)\r\n  \r\n        return // prevent setting loading to false below\r\n      }\r\n    } catch (err) {\r\n      error.value = cleanFirebaseError(err.message)\r\n    } finally {\r\n      if (!success.value) loading.value = false\r\n    }\r\n  }\r\n  \r\n  const handleResetPassword = async () => {\r\n    error.value = ''\r\n    success.value = ''\r\n    loading.value = true\r\n    try {\r\n      await resetPassword(email.value)\r\n      success.value = 'Password reset email sent!'\r\n    } catch (err) {\r\n      error.value = cleanFirebaseError(err.message)\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n  \r\n  const handleGoogleLogin = async () => {\r\n    error.value = ''\r\n    success.value = ''\r\n    loading.value = true\r\n    try {\r\n      await googleLogin()\r\n      emit('auth-success')\r\n    } catch (err) {\r\n      const code = err.code || ''\r\n      if (code === 'auth/popup-closed-by-user') {\r\n        emit('switch-to-register')\r\n      } else {\r\n        error.value = cleanFirebaseError(code || err.message)\r\n      }\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n  \r\n  \r\n  const handleAnonymousLogin = async () => {\r\n    error.value = ''\r\n    success.value = ''\r\n    loading.value = true\r\n    try {\r\n      await anonymousLogin()\r\n      emit('auth-success')\r\n      router.push({ name: 'Home', query: { guest: 'true' } })\r\n    } catch (err) {\r\n      error.value = cleanFirebaseError(err.message)\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n  \r\n  function cleanFirebaseError(message) {\r\n    const map = {\r\n      'auth/invalid-email': 'Invalid email address.',\r\n      'auth/user-disabled': 'This account has been disabled.',\r\n      'auth/user-not-found': 'No account found with this email.',\r\n      'auth/wrong-password': 'Incorrect password.',\r\n      'auth/email-already-in-use': 'Email is already in use.',\r\n      'auth/weak-password': 'Password should be at least 6 characters.',\r\n      'auth/popup-closed-by-user': 'Google sign-in was cancelled.',\r\n      'auth/popup-blocked': 'Popup blocked. Please allow popups for this site.',\r\n      'auth/network-request-failed': 'Network error. Please try again.',\r\n      'auth/too-many-requests': 'Too many attempts. Please wait and try again later.',\r\n    }\r\n  \r\n    for (const [code, friendlyMessage] of Object.entries(map)) {\r\n      if (message.includes(code)) return friendlyMessage\r\n    }\r\n  \r\n    return message.replace(/^Firebase:|\\(auth.*?\\)\\.?/gi, '').trim() || 'An unexpected error occurred.'\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  form {\r\n    margin: 10px;\r\n  }\r\n  label {\r\n    width: 100px;\r\n    font-weight: bold;\r\n    display: inline-block;\r\n  }\r\n  .input {\r\n    margin: 5px;\r\n  }\r\n  .input-field {\r\n    padding: 8px;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  .auth-button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    width: 100%;\r\n    padding: 16px 24px;\r\n    border: none;\r\n    border-radius: 12px;\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n    position: relative;\r\n    overflow: hidden;\r\n    margin: 12px 0;\r\n  }\r\n  \r\n  .auth-button:hover {\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  .register-btn {\r\n    background-color: #7e57c2;\r\n    color: white;\r\n    box-shadow: 0 4px 12px rgba(126, 87, 194, 0.3);\r\n  }\r\n  \r\n  .register-btn:hover {\r\n    box-shadow: 0 6px 16px rgba(126, 87, 194, 0.4);\r\n  }\r\n  \r\n  .reset-btn {\r\n    background-color: #f5f5f5;\r\n    color: #5a4a42;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n  }\r\n  \r\n  .reset-btn:hover {\r\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);\r\n    background-color: #eeeeee;\r\n  }\r\n  \r\n  .google-btn {\r\n    background-color: white;\r\n    color: #5a4a42;\r\n    border: 1px solid #e0e0e0;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n  }\r\n  \r\n  .google-btn:hover {\r\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);\r\n    background-color: #f8f8f8;\r\n  }\r\n  \r\n  .guest-btn {\r\n    background-color: #f5f5f5;\r\n    color: #5a4a42;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n  }\r\n  \r\n  .guest-btn:hover {\r\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);\r\n    background-color: #eeeeee;\r\n  }\r\n  \r\n  .message {\r\n    margin: 10px 0;\r\n    padding: 8px;\r\n    border-radius: 6px;\r\n  }\r\n  \r\n  .success {\r\n    background-color: #e6ffed;\r\n    color: #256029;\r\n    border: 1px solid #b2f5ea;\r\n  }\r\n  \r\n  .error {\r\n    background-color: #ffe6e6;\r\n    color: #990000;\r\n    border: 1px solid #f5b2b2;\r\n  }\r\n  </style>"],"mappings":";;EAGaA,KAAK,EAAC;AAAO;;EAKbA,KAAK,EAAC;AAAO;;EAR1BC,GAAA;EAa6BD,KAAK,EAAC;;mBAbnC;mBAAA;;EAAAC,GAAA;EAgCwBD,KAAK,EAAC;;;EAhC9BC,GAAA;EAiC0BD,KAAK,EAAC;;mBAjChC;mBAAA;;uBACIE,mBAAA,CAyCM,cAxCJC,mBAAA,CAgCO;IAhCAC,QAAM,EAFnBC,cAAA,CAE6BC,MAAA,CAAAC,YAAY;MACjCJ,mBAAA,CAGM,OAHNK,UAGM,G,0BAFJL,mBAAA,CAAoB,eAAb,OAAK,sB,gBACZA,mBAAA,CAAmE;IAL7E,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAK0BJ,MAAA,CAAAK,KAAK,GAAAD,MAAA;IAAEE,IAAI,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;IAACb,KAAK,EAAC;iDAAnCM,MAAA,CAAAK,KAAK,E,KAGvBR,mBAAA,CAGM,OAHNW,UAGM,G,0BAFJX,mBAAA,CAAuB,eAAhB,UAAQ,sB,gBACfA,mBAAA,CAAyE;IAVnF,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAU0BJ,MAAA,CAAAS,QAAQ,GAAAL,MAAA;IAAEE,IAAI,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;IAACb,KAAK,EAAC;iDAAzCM,MAAA,CAAAS,QAAQ,E,MAGdC,MAAA,CAAAC,OAAO,I,cAAnBf,mBAAA,CAGM,OAHNgB,UAGM,G,0BAFJf,mBAAA,CAAmB,eAAZ,MAAI,sB,gBACXA,mBAAA,CAAiE;IAf3E,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe0BJ,MAAA,CAAAa,IAAI,GAAAT,MAAA;IAAEE,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR,EAAQ;IAACb,KAAK,EAAC;iDAAjCM,MAAA,CAAAa,IAAI,E,OAf9BC,mBAAA,gBAkBQjB,mBAAA,CAES;IAFDS,IAAI,EAAC,QAAQ;IAAES,QAAQ,EAAEf,MAAA,CAAAgB,OAAO;IAAEtB,KAAK,EAAC;sBAC3CgB,MAAA,CAAAC,OAAO,+CAnBpBM,UAAA,GAuBgBP,MAAA,CAAAC,OAAO,I,cADff,mBAAA,CAQS;IA9BjBD,GAAA;IAwBUW,IAAI,EAAC,QAAQ;IACZY,OAAK,EAAElB,MAAA,CAAAmB,mBAAmB;IAC1BJ,QAAQ,EAAEf,MAAA,CAAAgB,OAAO;IAClBtB,KAAK,EAAC;KACP,oBAED,iBA9BR0B,UAAA,KAAAN,mBAAA,gBAgCiBd,MAAA,CAAAqB,KAAK,I,cAAdzB,mBAAA,CAAqD,KAArD0B,UAAqD,EAAAC,gBAAA,CAAZvB,MAAA,CAAAqB,KAAK,oBAhCtDP,mBAAA,gBAiCiBd,MAAA,CAAAwB,OAAO,I,cAAhB5B,mBAAA,CAA2D,KAA3D6B,UAA2D,EAAAF,gBAAA,CAAdvB,MAAA,CAAAwB,OAAO,oBAjC5DV,mBAAA,e,4BAoCMjB,mBAAA,CAES;IAFAqB,OAAK,EAAElB,MAAA,CAAA0B,iBAAiB;IAAGX,QAAQ,EAAEf,MAAA,CAAAgB,OAAO;IAAEtB,KAAK,EAAC;KAAyB,uBAEtF,iBAtCNiC,UAAA,GAuCM9B,mBAAA,CAES;IAFAqB,OAAK,EAAElB,MAAA,CAAA4B,oBAAoB;IAAGb,QAAQ,EAAEf,MAAA,CAAAgB,OAAO;IAAEtB,KAAK,EAAC;KAAwB,qBAExF,iBAzCNmC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}