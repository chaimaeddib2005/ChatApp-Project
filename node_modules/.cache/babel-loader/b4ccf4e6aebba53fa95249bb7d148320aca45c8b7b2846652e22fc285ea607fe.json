{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"status-indicator\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"modal-overlay\"\n};\nconst _hoisted_5 = {\n  class: \"modal\"\n};\nconst _hoisted_6 = {\n  class: \"modal-actions\"\n};\nconst _hoisted_7 = {\n  ref: \"messagesContainer\"\n};\nconst _hoisted_8 = [\"onMouseover\"];\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  class: \"timestamp\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  class: \"input-area\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"image-preview\"\n};\nconst _hoisted_16 = [\"src\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.goBackToChatList && _ctx.goBackToChatList(...args)),\n    id: \"gobackbut\"\n  }, \"Back to Chat List\"), _ctx.otherUserId ? (_openBlock(), _createElementBlock(\"small\", _hoisted_2, [_createTextVNode(_toDisplayString(_ctx.otherUserStatus || 'offline') + \" \", 1 /* TEXT */), _ctx.isOtherUserTyping ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \" (typing...)\")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _ctx.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[13] || (_cache[13] = _createElementVNode(\"h3\", null, \"Delete Message\", -1 /* HOISTED */)), _cache[14] || (_cache[14] = _createElementVNode(\"p\", null, \"Are you sure you want to delete this message?\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.confirmDelete && _ctx.confirmDelete(...args)),\n    class: \"confirm-btn\"\n  }, \"Delete\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.cancelDelete && _ctx.cancelDelete(...args)),\n    class: \"cancel-btn\"\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.messageList, msg => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: msg.id,\n      class: _normalizeClass(msg.sender === _ctx.currentUser?.uid ? 'sent' : 'received'),\n      onMouseover: $event => _ctx.hoveredMessage = msg.id,\n      onMouseleave: _cache[3] || (_cache[3] = $event => _ctx.hoveredMessage = null)\n    }, [_ctx.isImageMessage(msg.message) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"img\", {\n      src: msg.message,\n      alt: \"Image\",\n      class: \"chat-image\"\n    }, null, 8 /* PROPS */, _hoisted_10)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString(msg.message), 1 /* TEXT */)), _createElementVNode(\"small\", _hoisted_12, _toDisplayString(_ctx.formatTimestamp(msg.timestamp)), 1 /* TEXT */), msg.sender === _ctx.currentUser?.uid && _ctx.hoveredMessage === msg.id ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      onClick: _withModifiers($event => _ctx.deleteMessage(msg.id), [\"stop\"]),\n      class: \"delete-button\"\n    }, [...(_cache[15] || (_cache[15] = [_createElementVNode(\"i\", {\n      class: \"fas fa-trash\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_13)) : _createCommentVNode(\"v-if\", true)], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_14, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.newMessage = $event),\n    onInput: _cache[5] || (_cache[5] = (...args) => _ctx.handleTyping && _ctx.handleTyping(...args)),\n    onKeyup: _cache[6] || (_cache[6] = _withKeys((...args) => _ctx.sendCombinedMessage && _ctx.sendCombinedMessage(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.newMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = _withModifiers((...args) => _ctx.sendCombinedMessage && _ctx.sendCombinedMessage(...args), [\"prevent\"]))\n  }, _cache[16] || (_cache[16] = [_createElementVNode(\"i\", {\n    class: \"fas fa-paper-plane\"\n  }, null, -1 /* HOISTED */)])), _createElementVNode(\"div\", {\n    onDrop: _cache[11] || (_cache[11] = _withModifiers((...args) => _ctx.onDrop && _ctx.onDrop(...args), [\"prevent\"])),\n    onDragover: _cache[12] || (_cache[12] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    accept: \"image/*\",\n    onChange: _cache[8] || (_cache[8] = (...args) => _ctx.onFileChange && _ctx.onFileChange(...args)),\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _ctx.previewUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"img\", {\n    src: _ctx.previewUrl,\n    alt: \"Preview\",\n    class: \"chat-image\"\n  }, null, 8 /* PROPS */, _hoisted_16), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.cancelImage && _ctx.cancelImage(...args)),\n    class: \"cancel-button\"\n  }, _cache[17] || (_cache[17] = [_createElementVNode(\"i\", {\n    class: \"fas fa-times\"\n  }, null, -1 /* HOISTED */)]))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = $event => _ctx.$refs.fileInput.click()),\n    class: \"icon-button\"\n  }, _cache[18] || (_cache[18] = [_createElementVNode(\"i\", {\n    class: \"fas fa-image\"\n  }, null, -1 /* HOISTED */)]))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","_ctx","goBackToChatList","id","otherUserId","_hoisted_2","_createTextVNode","_toDisplayString","otherUserStatus","isOtherUserTyping","_hoisted_3","_createCommentVNode","showDeleteModal","_hoisted_4","_hoisted_5","_hoisted_6","confirmDelete","cancelDelete","_hoisted_7","_Fragment","_renderList","messageList","msg","_normalizeClass","sender","currentUser","uid","onMouseover","$event","hoveredMessage","onMouseleave","isImageMessage","message","_hoisted_9","src","alt","_hoisted_10","_hoisted_11","_hoisted_12","formatTimestamp","timestamp","_withModifiers","deleteMessage","_hoisted_13","_hoisted_8","_hoisted_14","type","newMessage","onInput","handleTyping","onKeyup","_withKeys","sendCombinedMessage","onDrop","onDragover","accept","onChange","onFileChange","style","previewUrl","_hoisted_15","_hoisted_16","cancelImage","$refs","fileInput","click"],"sources":["C:\\Users\\khadi\\ChatApp-Project\\src\\components\\ChatPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <button @click=\"goBackToChatList\" id=\"gobackbut\">Back to Chat List</button>\r\n    <small v-if=\"otherUserId\" class=\"status-indicator\">\r\n      {{ otherUserStatus || 'offline' }}\r\n      <span v-if=\"isOtherUserTyping\"> (typing...)</span>\r\n    </small>\r\n\r\n    <div v-if=\"showDeleteModal\" class=\"modal-overlay\">\r\n    <div class=\"modal\">\r\n      <h3>Delete Message</h3>\r\n      <p>Are you sure you want to delete this message?</p>\r\n      <div class=\"modal-actions\">\r\n        <button @click=\"confirmDelete\" class=\"confirm-btn\">Delete</button>\r\n        <button @click=\"cancelDelete\" class=\"cancel-btn\">Cancel</button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    \r\n    <ul ref=\"messagesContainer\">\r\n      <li\r\n        v-for=\"msg in messageList\"\r\n        :key=\"msg.id\"\r\n        :class=\"msg.sender === currentUser?.uid ? 'sent' : 'received'\"\r\n        @mouseover=\"hoveredMessage = msg.id\"\r\n          @mouseleave=\"hoveredMessage = null\"\r\n      >\r\n        <div v-if=\"isImageMessage(msg.message)\">\r\n          <img :src=\"msg.message\" alt=\"Image\" class=\"chat-image\" />\r\n        </div>\r\n        <div v-else>\r\n          {{ msg.message }}\r\n        </div>\r\n        <small class=\"timestamp\">{{ formatTimestamp(msg.timestamp) }}</small>\r\n        <button \r\n        v-if=\"msg.sender === currentUser?.uid && hoveredMessage === msg.id\"\r\n        @click.stop=\"deleteMessage(msg.id)\"\r\n        class=\"delete-button\"\r\n      >\r\n        <i class=\"fas fa-trash\"></i>\r\n      </button>\r\n\r\n      </li>\r\n    </ul>\r\n    <div class=\"input-area\">\r\n      <input \r\n        type=\"text\" \r\n        v-model=\"newMessage\"\r\n        @input=\"handleTyping\"\r\n        @keyup.enter=\"sendCombinedMessage\"\r\n      >\r\n      <button @click.prevent=\"sendCombinedMessage\">\r\n        <i class=\"fas fa-paper-plane\"></i>\r\n      </button>\r\n      <div @drop.prevent=\"onDrop\" @dragover.prevent>\r\n        <input\r\n          type=\"file\"\r\n          ref=\"fileInput\"\r\n          accept=\"image/*\"\r\n          @change=\"onFileChange\"\r\n          style=\"display: none\"\r\n        />\r\n        <div v-if=\"previewUrl\" class=\"image-preview\">\r\n          <img :src=\"previewUrl\" alt=\"Preview\" class=\"chat-image\" />\r\n          <button @click=\"cancelImage\" class=\"cancel-button\">\r\n            <i class=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n        <button @click=\"$refs.fileInput.click()\" class=\"icon-button\">\r\n          <i class=\"fas fa-image\"></i>\r\n        </button>\r\n      </div>\r\n    </div> \r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onBeforeUnmount, nextTick } from 'vue';\r\nimport { getDatabase, ref as dbRef, set, onDisconnect, onValue} from 'firebase/database';\r\nimport { useRoute } from 'vue-router';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { useRouter } from 'vue-router';\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  addDoc,\r\n  updateDoc,\r\n  arrayUnion,\r\n  collection,\r\n  serverTimestamp,\r\n  delete\r\n} from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst chatId = route.params.chatId;\r\nconst auth = getAuth();\r\nconst currentUser = auth.currentUser;\r\n\r\n// Refs\r\nconst newMessage = ref('');\r\nconst messageList = ref([]);\r\nconst previewUrl = ref('');\r\nconst fileInput = ref(null);\r\nconst otherUserStatus = ref('offline');\r\nconst isOtherUserTyping = ref(false);\r\nconst messagesContainer = ref(null);\r\nconst hoveredMessage = ref(null);\r\nconst showDeleteModal = ref(false);\r\nconst messageToDelete = ref(null);\r\nlet typingTimeout = null;\r\nlet otherUserId = null;\r\nlet unsubscribeStatus = null;\r\nlet unsubscribeTyping = null;\r\nlet chatUnsub = null;\r\n\r\n\r\nconst scrollToBottom = () => {\r\n  nextTick(() => {\r\n    if (messagesContainer.value) {\r\n      messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\r\n    }\r\n  });\r\n};\r\n\r\nconst goBackToChatList = () => {\r\n  router.push('/chatList');\r\n};\r\n\r\n\r\nconst deleteMessage = (messageId) => {\r\nmessageToDelete.value = messageId;\r\nshowDeleteModal.value = true;\r\n};\r\n\r\n\r\nconst confirmDelete = async () => {\r\nif (!messageToDelete.value) return;\r\n\r\ntry {\r\n  const chatRef = doc(db, 'chats', chatId);\r\n  const chatDoc = await getDoc(chatRef);\r\n  \r\n  if (chatDoc.exists()) {\r\n    const currentMessages = chatDoc.data().messages || [];\r\n    const updatedMessages = currentMessages.filter(id => id !== messageToDelete.value);\r\n    \r\n    await updateDoc(chatRef, {\r\n      messages: updatedMessages\r\n    });\r\n    \r\n    await deleteDoc(doc(db, 'chatMessages', messageToDelete.value));\r\n    \r\n    messageList.value = messageList.value.filter(msg => msg.id !== messageToDelete.value);\r\n    sortMessageList();\r\n\r\n  }\r\n} catch (error) {\r\n  console.error('Error deleting message:', error);\r\n} finally {\r\n  cancelDelete();\r\n}\r\n};\r\n\r\nconst cancelDelete = () => {\r\nshowDeleteModal.value = false;\r\nmessageToDelete.value = null;\r\n};\r\n\r\nconst setupPresence = async () => {\r\n  const rtdb = getDatabase();\r\n  const user = currentUser;\r\n  if (!user) return;\r\n\r\n  try {\r\n    const chatDoc = await getDoc(doc(db, 'chats', chatId));\r\n    if (!chatDoc.exists()) return;\r\n\r\n    const chatData = chatDoc.data();\r\n    otherUserId = chatData.user1 === user.uid ? chatData.user2 : chatData.user1;\r\n\r\n    // Current user's status\r\n    const userStatusRef = dbRef(rtdb, `status/${user.uid}`);\r\n    const userStatusConnectedRef = dbRef(rtdb, '.info/connected');\r\n    \r\n    // Other user's references\r\n    const otherUserStatusRef = dbRef(rtdb, `status/${otherUserId}`);\r\n    const otherUserTypingRef = dbRef(rtdb, `status/${otherUserId}/typing`);\r\n\r\n    // Connection state\r\n    onValue(userStatusConnectedRef, (snap) => {\r\n      if (snap.val() === true) {\r\n        set(userStatusRef, {\r\n          state: 'online',\r\n          last_changed: serverTimestamp(),\r\n        }).catch(e => console.error(\"Error setting status:\", e));\r\n\r\n        onDisconnect(userStatusRef).set({\r\n          state: 'offline',\r\n          last_changed: serverTimestamp(),\r\n        });\r\n      }\r\n    });\r\n\r\n    // Other user's status\r\n    unsubscribeStatus = onValue(otherUserStatusRef, (snapshot) => {\r\n      const status = snapshot.val();\r\n      otherUserStatus.value = status?.state || 'offline';\r\n    }, (error) => {\r\n      console.error(\"Status listener error:\", error);\r\n    });\r\n\r\n    // Typing status\r\n    unsubscribeTyping = onValue(otherUserTypingRef, (snapshot) => {\r\n      isOtherUserTyping.value = snapshot.val() || false;\r\n    }, (error) => {\r\n      console.error(\"Typing listener error:\", error);\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"Error setting up presence:\", error);\r\n  }\r\n};\r\n\r\nconst handleTyping = () => {\r\n  if (!currentUser || !otherUserId) return;\r\n  \r\n  const rtdb = getDatabase();\r\n  const typingRef = dbRef(rtdb, `status/${currentUser.uid}/typing`);\r\n  \r\n  set(typingRef, true).catch(e => console.error(\"Error setting typing:\", e));\r\n  \r\n  if (typingTimeout) clearTimeout(typingTimeout);\r\n  \r\n  typingTimeout = setTimeout(() => {\r\n    set(typingRef, false).catch(e => console.error(\"Error clearing typing:\", e));\r\n  }, 3000);\r\n};\r\n\r\nconst cancelImage = () => {\r\n  previewUrl.value = '';\r\n  // Clear the file input as well\r\n  if (fileInput.value) {\r\n    fileInput.value.value = '';\r\n  }\r\n};\r\n\r\nfunction isImageMessage(message) {\r\n  return typeof message === 'string' &&\r\n    (message.startsWith('data:image') || /\\.(jpeg|jpg|gif|png)$/i.test(message));\r\n}\r\n\r\nfunction formatTimestamp(ts) {\r\n  if (!ts) return '';\r\n\r\n  let date;\r\n  \r\n  if (ts?.toDate) {\r\n    date = ts.toDate();\r\n  } else if (ts?.seconds) {\r\n    date = new Date(ts.seconds * 1000);\r\n  } else if (ts instanceof Date) {\r\n    date = ts;\r\n  } else {\r\n    console.warn(\"Unknown timestamp format:\", ts);\r\n    return '';\r\n  }\r\n\r\n  return date.toLocaleTimeString([], { \r\n    hour: '2-digit', \r\n    minute: '2-digit' \r\n  });\r\n}\r\n\r\nasync function loadMessagesByIds(ids) {\r\n  const messages = [];\r\n  try {\r\n    if (!chatId) {\r\n      console.error(\"No chatId provided\");\r\n      return;\r\n    }\r\n\r\n    const chatDoc = await getDoc(doc(db, 'chats', chatId));\r\n    if (!chatDoc.exists()) {\r\n      console.error(\"Chat doesn't exist\");\r\n      return;\r\n    }\r\n\r\n    for (const id of ids) {\r\n      try {\r\n        if (!id || typeof id !== 'string') {\r\n          console.warn(\"Invalid message ID:\", id);\r\n          continue;\r\n        }\r\n\r\n        const messageDoc = await getDoc(doc(db, 'chatMessages', id));\r\n        if (messageDoc.exists()) {\r\n          const messageData = messageDoc.data();\r\n          messages.push({\r\n            id: messageDoc.id,\r\n            ...messageData,\r\n            timestamp: messageData.timestamp?.toDate?.() || new Date()\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error loading message ${id}:`, error);\r\n      }\r\n    }\r\n\r\n    messages.sort((a, b) => a.timestamp - b.timestamp);\r\n    messageList.value = messages;\r\n    scrollToBottom(); \r\n  } catch (error) {\r\n    console.error(\"Error loading messages:\", error);\r\n  }\r\n}\r\n\r\nasync function sendCombinedMessage() {\r\n  const text = newMessage.value.trim();\r\n  const image = previewUrl.value;\r\n\r\n  if (!text && !image) return;\r\n\r\n  try {\r\n    const messageData = {\r\n      sender: currentUser?.uid,\r\n      message: image || text,\r\n      timestamp: serverTimestamp(),\r\n      chatId: chatId\r\n    };\r\n\r\n    const newMsgRef = await addDoc(collection(db, 'chatMessages'), messageData);\r\n    await updateDoc(doc(db, 'chats', chatId), {\r\n      messages: arrayUnion(newMsgRef.id),\r\n      lastUpdated: serverTimestamp()\r\n    });\r\n\r\n    newMessage.value = '';\r\n    previewUrl.value = '';\r\n    \r\n    if (currentUser) {\r\n      const rtdb = getDatabase();\r\n      const typingRef = dbRef(rtdb, `status/${currentUser.uid}/typing`);\r\n      set(typingRef, false).catch(e => console.error(\"Error clearing typing:\", e));\r\n    }\r\n  } catch (error) {\r\n    console.error('Error sending message:', error);\r\n  }\r\n  scrollToBottom();\r\n}\r\n\r\nconst onDrop = (e) => {\r\n  const file = e.dataTransfer.files[0];\r\n  if (file) convertToBase64(file);\r\n};\r\n\r\nconst onFileChange = (e) => {\r\n  const file = e.target.files[0];\r\n  if (file) convertToBase64(file);\r\n};\r\n\r\nconst convertToBase64 = (file) => {\r\n  const reader = new FileReader();\r\n  reader.onload = () => {\r\n    previewUrl.value = reader.result;\r\n  };\r\n  reader.readAsDataURL(file);\r\n};\r\n\r\nonMounted(async () => {\r\n  try {\r\n    await setupPresence();\r\n    \r\n    const chatRef = doc(db, 'chats', chatId);\r\n    chatUnsub = onSnapshot(chatRef, (chatSnap) => {\r\n      if (chatSnap.exists()) {\r\n        const chatData = chatSnap.data();\r\n        const messageIds = chatData.messages || [];\r\n        loadMessagesByIds(messageIds);\r\n      } else {\r\n        console.warn('Chat document does not exist');\r\n        messageList.value = [];\r\n      }\r\n    }, (error) => {\r\n      console.error(\"Chat listener error:\", error);\r\n    });\r\n    scrollToBottom();\r\n  } catch (error) {\r\n    console.error(\"Error initializing chat:\", error);\r\n  }\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  if (chatUnsub) chatUnsub();\r\n  \r\n  if (unsubscribeStatus && typeof unsubscribeStatus === 'function') {\r\n    try {\r\n      unsubscribeStatus();\r\n    } catch (e) {\r\n      console.warn(\"Error unsubscribing status:\", e);\r\n    }\r\n  }\r\n  \r\n  if (unsubscribeTyping && typeof unsubscribeTyping === 'function') {\r\n    try {\r\n      unsubscribeTyping();\r\n    } catch (e) {\r\n      console.warn(\"Error unsubscribing typing:\", e);\r\n    }\r\n  }\r\n  \r\n  if (typingTimeout) clearTimeout(typingTimeout);\r\n  \r\n  if (currentUser) {\r\n    const rtdb = getDatabase();\r\n    const userStatusRef = dbRef(rtdb, `status/${currentUser.uid}`);\r\n    set(userStatusRef, {\r\n      state: 'offline',\r\n      last_changed: serverTimestamp(),\r\n    }).catch(e => console.warn(\"Error setting offline status:\", e));\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 40px auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #ffffff;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n#gobackbut{\r\n  width: 150px;\r\n  height: 35px;\r\n  border-radius: 10px;\r\n}\r\n\r\nul {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 0 10px;\r\n  margin-bottom: 20px;\r\n  max-height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\nli {\r\n  list-style: none;\r\n  max-width: 75%;\r\n  padding: 10px 14px;\r\n  border-radius: 20px;\r\n  position: relative;\r\n  word-wrap: break-word;\r\n  line-height: 1.5;\r\n  font-size: 0.95rem;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.sent {\r\n  align-self: flex-end;\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  border-bottom-right-radius: 4px;\r\n}\r\n\r\n.received {\r\n  align-self: flex-start;\r\n  background-color: #f0f0f0;\r\n  color: #333;\r\n  border-bottom-left-radius: 4px;\r\n}\r\n\r\n.chat-image {\r\n  max-width: 100%;\r\n  border-radius: 10px;\r\n  margin-top: 6px;\r\n}\r\n\r\n.timestamp {\r\n  font-size: 0.7rem;\r\n  margin-top: 4px;\r\n  opacity: 0.7;\r\n  text-align: right;\r\n}\r\n\r\n.input-area {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-top: auto;\r\n  padding-top: 10px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  flex: 1;\r\n  padding: 10px 14px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n  outline: none;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\ninput[type=\"text\"]:focus {\r\n  border-color: #4caf50;\r\n}\r\n\r\nbutton {\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 42px;\r\n  height: 42px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background-color 0.2s ease-in-out;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #43a047;\r\n}\r\n\r\nbutton i {\r\n  font-size: 18px;\r\n}\r\n\r\n.icon-button {\r\n  background-color: #2196f3;\r\n  margin-left: 4px;\r\n}\r\n\r\n.icon-button:hover {\r\n  background-color: #1e88e5;\r\n}\r\n.image-preview {\r\n  position: relative;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.cancel-button {\r\n  position: absolute;\r\n  top: -10px;\r\n  right: -10px;\r\n  background-color: #ff4444;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  padding: 0;\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: #cc0000;\r\n}\r\n\r\n.cancel-button i {\r\n  font-size: 12px;\r\n}\r\n\r\n\r\n.image-preview img {\r\n  max-width: 120px;\r\n  border-radius: 12px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.status-indicator {\r\n  display: block;\r\n  text-align: center;\r\n  margin: 10px 0;\r\n  color: #666;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}