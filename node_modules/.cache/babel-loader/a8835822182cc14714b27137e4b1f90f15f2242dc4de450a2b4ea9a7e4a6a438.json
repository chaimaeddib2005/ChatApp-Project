{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport { collection, onSnapshot } from 'firebase/firestore';\nimport { db } from '../firebase'; // adjust path if needed\n\nexport default {\n  __name: 'ChatPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const documents = ref([]);\n    let unsubscribe = null;\n    onMounted(() => {\n      const colRef = collection(db, \"messages\");\n      unsubscribe = onSnapshot(colRef, snapshot => {\n        documents.value = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      });\n    });\n    onBeforeUnmount(() => {\n      if (unsubscribe) unsubscribe(); // Clean up the listener\n    });\n    const __returned__ = {\n      documents,\n      get unsubscribe() {\n        return unsubscribe;\n      },\n      set unsubscribe(v) {\n        unsubscribe = v;\n      },\n      ref,\n      onMounted,\n      onBeforeUnmount,\n      get collection() {\n        return collection;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","collection","onSnapshot","db","documents","unsubscribe","colRef","snapshot","value","docs","map","doc","id","data"],"sources":["C:/Users/khadi/ChatApp-Project/src/components/ChatPage.vue"],"sourcesContent":["<!-- RealtimeComponent.vue -->\r\n<template>\r\n    <div>\r\n      <h2>Realtime Documents:</h2>\r\n      <ul>\r\n        <li v-for=\"doc in documents\" :key=\"doc.id\">\r\n          {{ doc.message }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, onBeforeUnmount } from 'vue';\r\n  import { collection, onSnapshot } from 'firebase/firestore';\r\n  import { db } from '../firebase'; // adjust path if needed\r\n  \r\n  const documents = ref([]);\r\n  let unsubscribe = null;\r\n  \r\n  onMounted(() => {\r\n    const colRef = collection(db, \"messages\");\r\n  \r\n    unsubscribe = onSnapshot(colRef, (snapshot) => {\r\n      documents.value = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n    });\r\n  });\r\n  \r\n  onBeforeUnmount(() => {\r\n    if (unsubscribe) unsubscribe(); // Clean up the listener\r\n  });\r\n  </script>\r\n  "],"mappings":";;AAaE,SAASA,GAAG,EAAEC,SAAS,EAAEC,eAAe,QAAQ,KAAK;AACrD,SAASC,UAAU,EAAEC,UAAU,QAAQ,oBAAoB;AAC3D,SAASC,EAAE,QAAQ,aAAa,CAAC,CAAC;;;;;;;;IAElC,MAAMC,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC;IACzB,IAAIO,WAAW,GAAG,IAAI;IAEtBN,SAAS,CAAC,MAAM;MACd,MAAMO,MAAM,GAAGL,UAAU,CAACE,EAAE,EAAE,UAAU,CAAC;MAEzCE,WAAW,GAAGH,UAAU,CAACI,MAAM,EAAGC,QAAQ,IAAK;QAC7CH,SAAS,CAACI,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;UAC1CC,EAAE,EAAED,GAAG,CAACC,EAAE;UACV,GAAGD,GAAG,CAACE,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFb,eAAe,CAAC,MAAM;MACpB,IAAIK,WAAW,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}