{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"timestamp\"\n};\nconst _hoisted_6 = {\n  class: \"input-area\"\n};\nconst _hoisted_7 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"Chat between \" + _toDisplayString($setup.user1) + \" and \" + _toDisplayString($setup.user2), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messageList, msg => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: msg.id,\n      class: _normalizeClass(msg.sender === $setup.currentUser?.uid ? 'sent' : 'received')\n    }, [$setup.isImageMessage(msg.message) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n      src: msg.message,\n      alt: \"Image\",\n      class: \"chat-image\"\n    }, null, 8 /* PROPS */, _hoisted_3)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(msg.message), 1 /* TEXT */)), _createElementVNode(\"small\", _hoisted_5, _toDisplayString($setup.formatTimestamp(msg.timestamp)), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newMessage = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newMessage]]), _createElementVNode(\"button\", {\n    onClick: _withModifiers($setup.sendCombinedMessage, [\"prevent\"])\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n    class: \"fas fa-paper-plane\"\n  }, null, -1 /* HOISTED */)]))]), _createCommentVNode(\" Hidden input \"), _createElementVNode(\"div\", {\n    onDrop: _withModifiers($setup.onDrop, [\"prevent\"]),\n    onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    accept: \"image/*\",\n    onChange: $setup.onFileChange,\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createCommentVNode(\" Custom upload button \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$refs.fileInput.click()),\n    class: \"icon-button\"\n  }, _cache[5] || (_cache[5] = [_createElementVNode(\"i\", {\n    class: \"fas fa-paperclip\"\n  }, null, -1 /* HOISTED */)]))], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", {\n    class: \"upload-box\",\n    onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _withModifiers($setup.onDrop, [\"prevent\"])\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    onChange: $setup.onFileChange\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"img\", {\n    src: $setup.previewUrl,\n    class: \"avatar\",\n    onClick: $setup.triggerFileInput\n  }, null, 8 /* PROPS */, _hoisted_7), _cache[6] || (_cache[6] = _createElementVNode(\"p\", {\n    class: \"upload-text\"\n  }, \"Click or drag image here to upload\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","user1","user2","_Fragment","_renderList","messageList","msg","id","_normalizeClass","sender","currentUser","uid","isImageMessage","message","_hoisted_2","src","alt","_hoisted_3","_hoisted_4","_hoisted_5","formatTimestamp","timestamp","_hoisted_6","type","_cache","$event","newMessage","onClick","_withModifiers","sendCombinedMessage","_createCommentVNode","onDrop","onDragover","ref","accept","onChange","onFileChange","style","_ctx","$refs","fileInput","click","previewUrl","triggerFileInput","_hoisted_7"],"sources":["C:\\Users\\khadi\\ChatApp-Project\\src\\components\\ChatPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <h2>Chat between {{ user1 }} and {{ user2 }}</h2>\r\n      <ul>\r\n        <li\r\n          v-for=\"msg in messageList\"\r\n          :key=\"msg.id\"\r\n          :class=\"msg.sender === currentUser?.uid ? 'sent' : 'received'\"\r\n        >\r\n          <div v-if=\"isImageMessage(msg.message)\">\r\n            <img :src=\"msg.message\" alt=\"Image\" class=\"chat-image\" />\r\n          </div>\r\n          <div v-else>\r\n            {{ msg.message }}\r\n          </div>\r\n          <small class=\"timestamp\">{{ formatTimestamp(msg.timestamp) }}</small>\r\n        </li>\r\n\r\n      </ul>\r\n      <div class=\"input-area\">\r\n          <input type=\"text\" v-model=\"newMessage\">\r\n        <button @click.prevent=\"sendCombinedMessage\">\r\n              <i class=\"fas fa-paper-plane\"></i>\r\n          </button>\r\n\r\n      </div>\r\n      <!-- Hidden input -->\r\n       <div @drop.prevent=\"onDrop\" @dragover.prevent>\r\n        <input\r\n        type=\"file\"\r\n        ref=\"fileInput\"\r\n        accept=\"image/*\"\r\n        @change=\"onFileChange\"\r\n        style=\"display: none\"\r\n      />\r\n\r\n      <!-- Custom upload button -->\r\n      <button @click=\"$refs.fileInput.click()\" class=\"icon-button\">\r\n        <i class=\"fas fa-paperclip\"></i>\r\n      </button>\r\n\r\n       </div>\r\n      \r\n\r\n      \r\n       <div class=\"upload-box\" @dragover.prevent @drop.prevent=\"onDrop\">\r\n        <input type=\"file\" ref=\"fileInput\" @change=\"onFileChange\"  />\r\n        <img\r\n          :src=\"previewUrl\"\r\n      \r\n          class=\"avatar\"\r\n          @click=\"triggerFileInput\"\r\n        />\r\n        <p class=\"upload-text\">Click or drag image here to upload</p>\r\n      </div>\r\n      \r\n\r\n    </div>\r\n  </template>\r\n  <script setup>\r\n  import { ref, onBeforeUnmount, onMounted } from 'vue';\r\n  import { doc, getDoc, onSnapshot, addDoc, updateDoc, arrayUnion, collection, serverTimestamp, getDocs } from 'firebase/firestore';\r\n  import { db } from '../firebase';\r\n  import { useRoute } from 'vue-router';\r\n  import { getAuth } from 'firebase/auth';\r\n\r\n  const previewUrl = ref('')\r\n  const fileInput = ref(null)\r\n\r\n \r\n  \r\n  const route = useRoute();\r\n  const user1 = route.params.user1;\r\n  const user2 = route.params.user2;\r\n  \r\n  const auth = getAuth();\r\n  const currentUser = auth.currentUser;\r\n  \r\n  const newMessage = ref(\"\");\r\n  const messageList = ref([]);\r\n  let chatUnsub = null;\r\n  let chatId = null;\r\n  \r\n  // 🔍 Helper to find the existing chat between user1 and user2\r\n  async function findChatId(user1, user2) {\r\n    const chatsRef = collection(db, 'chats');\r\n    const snapshot = await getDocs(chatsRef);\r\n  \r\n    for (const docSnap of snapshot.docs) {\r\n      const data = docSnap.data();\r\n      const users = [data.user1, data.user2];\r\n      if (users.includes(user1) && users.includes(user2)) {\r\n        return docSnap.id;\r\n      }\r\n    }\r\n  \r\n    return null;\r\n  }\r\n\r\n  async function sendCombinedMessage() {\r\n  const text = newMessage.value.trim();\r\n  const image = previewUrl.value;\r\n\r\n  // If there's no message or image, do nothing\r\n  if (!text && !image) return;\r\n\r\n  const messageData = {\r\n    sender: currentUser?.uid,\r\n    receiver: currentUser?.uid === user1 ? user2 : user1,\r\n    message: text || image,\r\n    timestamp: serverTimestamp(),\r\n  };\r\n\r\n  try {\r\n    const newMsgRef = await addDoc(collection(db, 'chatMessages'), messageData);\r\n    await updateDoc(doc(db, 'chats', chatId), {\r\n      messages: arrayUnion(newMsgRef.id),\r\n    });\r\n\r\n    newMessage.value = \"\";\r\n    previewUrl.value = \"\"; // Clear image after sending\r\n  } catch (error) {\r\n    console.error(\"Error sending message:\", error);\r\n  }\r\n}\r\n\r\n  \r\n  async function loadMessagesByIds(ids) {\r\n    const messages = [];\r\n    for (const id of ids) {\r\n      const messageDoc = await getDoc(doc(db, 'chatMessages', id));\r\n      if (messageDoc.exists()) {\r\n        messages.push({ id: messageDoc.id, ...messageDoc.data() });\r\n      }\r\n    }\r\n    messageList.value = messages;\r\n  }\r\n  \r\n  function isImageMessage(message) {\r\n  return typeof message === 'string' && (message.startsWith('data:image') || /\\.(jpeg|jpg|gif|png)$/.test(message));\r\n}\r\n\r\nasync function sendImageMessage(imageBase64) {\r\n  const messageData = {\r\n    sender: currentUser?.uid,\r\n    receiver: currentUser?.uid === user1 ? user2 : user1,\r\n    message: imageBase64,  // this is base64 or later it could be a real URL\r\n    timestamp: serverTimestamp()\r\n  };\r\n\r\n  const newMsgRef = await addDoc(collection(db, 'chatMessages'), messageData);\r\n  await updateDoc(doc(db, 'chats', chatId), {\r\n    messages: arrayUnion(newMsgRef.id)\r\n  });\r\n}\r\n\r\n  // 👇 Load chat on component mount\r\n  onMounted(async () => {\r\n    chatId = await findChatId(user1, user2);\r\n  \r\n    if (!chatId) {\r\n      const newChatRef = await addDoc(collection(db, 'chats'), {\r\n        user1,\r\n        user2,\r\n        messages: []\r\n      });\r\n      chatId = newChatRef.id;\r\n    }\r\n  \r\n    const chatRef = doc(db, 'chats', chatId);\r\n    chatUnsub = onSnapshot(chatRef, (chatSnap) => {\r\n      if (chatSnap.exists()) {\r\n        const chatData = chatSnap.data();\r\n        const messageIds = chatData.messages || [];\r\n        loadMessagesByIds(messageIds);\r\n      } else {\r\n        console.log('Chat does not exist.');\r\n        messageList.value = [];\r\n      }\r\n    });\r\n  });\r\n  \r\n\r\n  \r\n  function formatTimestamp(ts) {\r\n    if (!ts) return '';\r\n    const date = ts.toDate();\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  }\r\n  const onDrop = (e) => {\r\n    const file = e.dataTransfer.files[0]\r\n    if (file) convertToBase64(file)\r\n  }\r\n  \r\n  const convertToBase64 = (file) => {\r\n    const reader = new FileReader()\r\n    reader.onload = async () => {\r\n      const base64Image = reader.result\r\n      previewUrl.value = base64Image\r\n      await sendImageMessage(base64Image);\r\n      \r\n    }\r\n    reader.readAsDataURL(file)\r\n  }\r\n  const onFileChange = async (e) => {\r\n  const file = e.target.files[0];\r\n  if (file) {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      previewUrl.value = reader.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n};\r\n\r\n\r\n\r\n  const triggerFileInput = () => fileInput.value?.click()\r\n  \r\n  onBeforeUnmount(() => {\r\n    if (chatUnsub) chatUnsub();\r\n  });\r\n  </script>\r\n  \r\n\r\n  <style scoped>\r\n \r\n .container {\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #f5f5f5;\r\n    border-radius: 10px;\r\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n  }\r\n \r\n  \r\n  ul {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n    padding: 0;\r\n    margin: 0 0 20px 0;\r\n  }\r\n  \r\n \r\n  li {\r\n    list-style: none;\r\n    margin-bottom: 12px;\r\n    max-width: 50%;\r\n    padding: 12px 16px;\r\n    border-radius: 18px;\r\n    line-height: 1.4;\r\n    position: relative;\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  .sent {\r\n    text-align: left;\r\n    background-color: #49df64;\r\n    color: white;\r\n    margin-left: auto;\r\n    border-bottom-right-radius: 4px;\r\n  }\r\n  \r\n\r\n  .received {\r\n    text-align: left;\r\n    background-color: #e9ecef;\r\n    color: #333;\r\n    margin-right: auto;\r\n    border-bottom-left-radius: 4px;\r\n  }\r\n  \r\n\r\n  .input-area {\r\n    display: flex;\r\n    height: 40px;\r\n    gap: 10px;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    flex: 1;\r\n    border: 1px solid #ddd;\r\n    border-radius: 15px;\r\n    outline: none;\r\n    font-size: 16px;\r\n    height: 45px;\r\n    width: 60%;\r\n    padding: 4px;\r\n  }\r\n  \r\n  input[type=\"text\"]:focus {\r\n    border-color: #49df64;\r\n  }\r\n  \r\n\r\n  button {\r\n    background-color: #49df64;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    cursor: pointer;\r\n    transition: background-color 0.2s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #4e9a5c;\r\n  }\r\n  \r\n  button i {\r\n    font-size: 18px;\r\n  }\r\n\r\n \r\n  .timestamp {\r\n    font-size: 0.7rem;\r\n    opacity: 0.8;\r\n    margin-top: 4px;\r\n    display: block;\r\n    text-align: right;\r\n  }\r\n  \r\n  .sent .timestamp {\r\n    color: rgba(255, 255, 255, 0.977);\r\n  }\r\n  \r\n  .received .timestamp {\r\n    color: rgba(0,0,0,0.6);\r\n    \r\n  }\r\n  \r\n\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}