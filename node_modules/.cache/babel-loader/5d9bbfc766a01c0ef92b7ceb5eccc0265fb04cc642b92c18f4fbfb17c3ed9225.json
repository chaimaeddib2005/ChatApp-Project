{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"timestamp\"\n};\nconst _hoisted_6 = {\n  class: \"input-area\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"image-preview\"\n};\nconst _hoisted_8 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messageList, msg => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: msg.id,\n      class: _normalizeClass(msg.sender === $setup.currentUser?.uid ? 'sent' : 'received')\n    }, [$setup.isImageMessage(msg.message) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n      src: msg.message,\n      alt: \"Image\",\n      class: \"chat-image\"\n    }, null, 8 /* PROPS */, _hoisted_3)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(msg.message), 1 /* TEXT */)), _createElementVNode(\"small\", _hoisted_5, _toDisplayString($setup.formatTimestamp(msg.timestamp)), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newMessage = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newMessage]]), _createElementVNode(\"button\", {\n    onClick: _withModifiers($setup.sendCombinedMessage, [\"prevent\"])\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"i\", {\n    class: \"fas fa-paper-plane\"\n  }, null, -1 /* HOISTED */)])), _createElementVNode(\"div\", {\n    onDrop: _withModifiers($setup.onDrop, [\"prevent\"]),\n    onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    accept: \"image/*\",\n    onChange: $setup.onFileChange,\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), $setup.previewUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n    src: $setup.previewUrl,\n    alt: \"Preview\",\n    class: \"chat-image\"\n  }, null, 8 /* PROPS */, _hoisted_8)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Custom upload button \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$refs.fileInput.click()),\n    class: \"icon-button\"\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n    class: \"fas fa-image\"\n  }, null, -1 /* HOISTED */)]))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$setup","messageList","msg","id","_normalizeClass","sender","currentUser","uid","isImageMessage","message","_hoisted_2","src","alt","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","formatTimestamp","timestamp","_hoisted_6","type","_cache","$event","newMessage","onClick","_withModifiers","sendCombinedMessage","onDrop","onDragover","ref","accept","onChange","onFileChange","style","previewUrl","_hoisted_7","_hoisted_8","_createCommentVNode","_ctx","$refs","fileInput","click"],"sources":["C:\\Users\\khadi\\ChatApp-Project\\src\\components\\ChatPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <ul>\r\n        <li\r\n          v-for=\"msg in messageList\"\r\n          :key=\"msg.id\"\r\n          :class=\"msg.sender === currentUser?.uid ? 'sent' : 'received'\"\r\n        >\r\n          <div v-if=\"isImageMessage(msg.message)\">\r\n            <img :src=\"msg.message\" alt=\"Image\" class=\"chat-image\" />\r\n          </div>\r\n          <div v-else>\r\n            {{ msg.message }}\r\n          </div>\r\n          <small class=\"timestamp\">{{ formatTimestamp(msg.timestamp) }}</small>\r\n        </li>\r\n\r\n      </ul>\r\n      <div class=\"input-area\">\r\n          <input type=\"text\" v-model=\"newMessage\">\r\n        <button @click.prevent=\"sendCombinedMessage\">\r\n              <i class=\"fas fa-paper-plane\"></i>\r\n        </button>\r\n        <div @drop.prevent=\"onDrop\" @dragover.prevent>\r\n        <input\r\n        type=\"file\"\r\n        ref=\"fileInput\"\r\n        accept=\"image/*\"\r\n        @change=\"onFileChange\"\r\n        style=\"display: none\"\r\n        />\r\n        <div v-if=\"previewUrl\" class=\"image-preview\">\r\n          <img :src=\"previewUrl\" alt=\"Preview\" class=\"chat-image\" />\r\n        </div>\r\n\r\n      <!-- Custom upload button -->\r\n        <button @click=\"$refs.fileInput.click()\" class=\"icon-button\">\r\n          <i class=\"fas fa-image\"></i>\r\n        </button>\r\n\r\n      </div>\r\n\r\n      </div>\r\n\r\n     \r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  </template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { getAuth } from 'firebase/auth';\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  addDoc,\r\n  updateDoc,\r\n  arrayUnion,\r\n  collection,\r\n  serverTimestamp,\r\n} from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\n// Route & Auth\r\nconst route = useRoute();\r\nconst chatId = route.params.chatId;\r\nconst auth = getAuth();\r\nconst currentUser = auth.currentUser;\r\n\r\n// Refs\r\nconst newMessage = ref('');\r\nconst messageList = ref([]);\r\nconst previewUrl = ref('');\r\nconst fileInput = ref(null);\r\n\r\n// Image check helper\r\nfunction isImageMessage(message) {\r\n  return typeof message === 'string' &&\r\n    (message.startsWith('data:image') || /\\.(jpeg|jpg|gif|png)$/i.test(message));\r\n}\r\n\r\n// Timestamp formatter\r\nfunction formatTimestamp(ts) {\r\n  if (!ts) return '';\r\n  const date = ts.toDate();\r\n  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n}\r\n\r\n// Load messages by their IDs\r\nasync function loadMessagesByIds(ids) {\r\n  const messages = [];\r\n  for (const id of ids) {\r\n    const messageDoc = await getDoc(doc(db, 'chatMessages', id));\r\n    if (messageDoc.exists()) {\r\n      messages.push({ id: messageDoc.id, ...messageDoc.data() });\r\n    }\r\n  }\r\n  messageList.value = messages;\r\n}\r\n\r\n// Send message (text or image)\r\nasync function sendCombinedMessage() {\r\n  const text = newMessage.value.trim();\r\n  const image = previewUrl.value;\r\n\r\n  if (!text && !image) return;\r\n\r\n  try {\r\n    const chatDoc = await getDoc(doc(db, 'chats', chatId));\r\n    if (!chatDoc.exists()) {\r\n      console.error('Chat not found');\r\n      return;\r\n    }\r\n\r\n    const chatData = chatDoc.data();\r\n    const otherUser = chatData.user1 === currentUser?.uid ? chatData.user2 : chatData.user1;\r\n\r\n    const messageData = {\r\n      sender: currentUser?.uid,\r\n      receiver: otherUser,\r\n      message: image || text,\r\n      timestamp: serverTimestamp(),\r\n    };\r\n\r\n    const newMsgRef = await addDoc(collection(db, 'chatMessages'), messageData);\r\n\r\n    await updateDoc(doc(db, 'chats', chatId), {\r\n      messages: arrayUnion(newMsgRef.id),\r\n    });\r\n\r\n    // Clear input fields\r\n    newMessage.value = '';\r\n    previewUrl.value = '';\r\n  } catch (error) {\r\n    console.error('Error sending message:', error);\r\n  }\r\n}\r\n\r\n// Drag & drop handler\r\nconst onDrop = (e) => {\r\n  const file = e.dataTransfer.files[0];\r\n  if (file) convertToBase64(file);\r\n};\r\n\r\n// File input handler\r\nconst onFileChange = (e) => {\r\n  const file = e.target.files[0];\r\n  if (file) convertToBase64(file);\r\n};\r\n\r\n// Convert image to base64 for preview\r\nconst convertToBase64 = (file) => {\r\n  const reader = new FileReader();\r\n  reader.onload = () => {\r\n    previewUrl.value = reader.result;\r\n  };\r\n  reader.readAsDataURL(file);\r\n};\r\n\r\n// Subscribe to chat updates on mount\r\nlet chatUnsub = null;\r\nonMounted(async () => {\r\n  const chatRef = doc(db, 'chats', chatId);\r\n  chatUnsub = onSnapshot(chatRef, (chatSnap) => {\r\n    if (chatSnap.exists()) {\r\n      const chatData = chatSnap.data();\r\n      const messageIds = chatData.messages || [];\r\n      loadMessagesByIds(messageIds);\r\n    } else {\r\n      console.warn('Chat document does not exist');\r\n      messageList.value = [];\r\n    }\r\n  });\r\n});\r\n\r\n// Cleanup on unmount\r\nonBeforeUnmount(() => {\r\n  if (chatUnsub) chatUnsub();\r\n});\r\n</script>\r\n\r\n\r\n  <style scoped>\r\n \r\n .container {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 40px auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #ffffff;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 16px;\r\n  color: #333;\r\n}\r\n\r\nul {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 0 10px;\r\n  margin-bottom: 20px;\r\n  max-height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n/* Message bubble */\r\nli {\r\n  list-style: none;\r\n  max-width: 75%;\r\n  padding: 10px 14px;\r\n  border-radius: 20px;\r\n  position: relative;\r\n  word-wrap: break-word;\r\n  line-height: 1.5;\r\n  font-size: 0.95rem;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.sent {\r\n  align-self: flex-end;\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  border-bottom-right-radius: 4px;\r\n}\r\n\r\n.received {\r\n  align-self: flex-start;\r\n  background-color: #f0f0f0;\r\n  color: #333;\r\n  border-bottom-left-radius: 4px;\r\n}\r\n\r\n.chat-image {\r\n  max-width: 100%;\r\n  border-radius: 10px;\r\n  margin-top: 6px;\r\n}\r\n\r\n.timestamp {\r\n  font-size: 0.7rem;\r\n  margin-top: 4px;\r\n  opacity: 0.7;\r\n  text-align: right;\r\n}\r\n\r\n.input-area {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-top: auto;\r\n  padding-top: 10px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  flex: 1;\r\n  padding: 10px 14px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n  outline: none;\r\n  transition: border-color 0.2s;\r\n}\r\n\r\ninput[type=\"text\"]:focus {\r\n  border-color: #4caf50;\r\n}\r\n\r\nbutton {\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 42px;\r\n  height: 42px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background-color 0.2s ease-in-out;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #43a047;\r\n}\r\n\r\nbutton i {\r\n  font-size: 18px;\r\n}\r\n\r\n.icon-button {\r\n  background-color: #2196f3;\r\n  margin-left: 4px;\r\n}\r\n\r\n.icon-button:hover {\r\n  background-color: #1e88e5;\r\n}\r\n\r\n.image-preview {\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.image-preview img {\r\n  max-width: 120px;\r\n  border-radius: 12px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n  \r\n\r\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EAD1BC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;EAciBD,KAAK,EAAC;AAAW;;EAIvBA,KAAK,EAAC;AAAY;;EAlB7BC,GAAA;EA+B+BD,KAAK,EAAC;;mBA/BrC;;uBACIE,mBAAA,CAgDM,OAhDNC,UAgDM,GA/CJC,mBAAA,CAeK,c,kBAdHF,mBAAA,CAYKG,SAAA,QAfbC,WAAA,CAIwBC,MAAA,CAAAC,WAAW,EAAlBC,GAAG;yBADZP,mBAAA,CAYK;MAVFD,GAAG,EAAEQ,GAAG,CAACC,EAAE;MACXV,KAAK,EANhBW,eAAA,CAMkBF,GAAG,CAACG,MAAM,KAAKL,MAAA,CAAAM,WAAW,EAAEC,GAAG;QAE5BP,MAAA,CAAAQ,cAAc,CAACN,GAAG,CAACO,OAAO,K,cAArCd,mBAAA,CAEM,OAVhBe,UAAA,GASYb,mBAAA,CAAyD;MAAnDc,GAAG,EAAET,GAAG,CAACO,OAAO;MAAEG,GAAG,EAAC,OAAO;MAACnB,KAAK,EAAC;4BATtDoB,UAAA,E,oBAWUlB,mBAAA,CAEM,OAbhBmB,UAAA,EAAAC,gBAAA,CAYeb,GAAG,CAACO,OAAO,mBAEhBZ,mBAAA,CAAqE,SAArEmB,UAAqE,EAAAD,gBAAA,CAAzCf,MAAA,CAAAiB,eAAe,CAACf,GAAG,CAACgB,SAAS,kB;oCAI7DrB,mBAAA,CAwBM,OAxBNsB,UAwBM,G,gBAvBFtB,mBAAA,CAAwC;IAAjCuB,IAAI,EAAC,MAAM;IAnB5B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmBsCtB,MAAA,CAAAuB,UAAU,GAAAD,MAAA;iDAAVtB,MAAA,CAAAuB,UAAU,E,GACxC1B,mBAAA,CAES;IAFA2B,OAAK,EApBtBC,cAAA,CAoBgCzB,MAAA,CAAA0B,mBAAmB;gCACrC7B,mBAAA,CAAkC;IAA/BJ,KAAK,EAAC;EAAoB,2B,IAEnCI,mBAAA,CAiBI;IAjBE8B,MAAI,EAvBlBF,cAAA,CAuB4BzB,MAAA,CAAA2B,MAAM;IAAGC,UAAQ,EAAAP,MAAA,QAAAA,MAAA,MAvB7CI,cAAA,CAuBoC,QAAiB;MAC7C5B,mBAAA,CAME;IALFuB,IAAI,EAAC,MAAM;IACXS,GAAG,EAAC,WAAW;IACfC,MAAM,EAAC,SAAS;IACfC,QAAM,EAAE/B,MAAA,CAAAgC,YAAY;IACrBC,KAAqB,EAArB;MAAA;IAAA;kDAEWjC,MAAA,CAAAkC,UAAU,I,cAArBvC,mBAAA,CAEM,OAFNwC,UAEM,GADJtC,mBAAA,CAA0D;IAApDc,GAAG,EAAEX,MAAA,CAAAkC,UAAU;IAAEtB,GAAG,EAAC,SAAS;IAACnB,KAAK,EAAC;0BAhCrD2C,UAAA,E,KAAAC,mBAAA,gBAmCMA,mBAAA,0BAA6B,EAC3BxC,mBAAA,CAES;IAFA2B,OAAK,EAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEgB,IAAA,CAAAC,KAAK,CAACC,SAAS,CAACC,KAAK;IAAIhD,KAAK,EAAC;gCAC7CI,mBAAA,CAA4B;IAAzBJ,KAAK,EAAC;EAAc,2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}